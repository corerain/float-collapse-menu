{"remainingRequest":"/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/src/FloatCollapseMenu.vue?vue&type=style&index=0&id=7c8b0702&lang=scss&scoped=true&","dependencies":[{"path":"/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/src/FloatCollapseMenu.vue","mtime":1653905782721},{"path":"/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/node_modules/css-loader/dist/cjs.js","mtime":1651821464835},{"path":"/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1651821465097},{"path":"/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/node_modules/postcss-loader/src/index.js","mtime":1651821465030},{"path":"/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/node_modules/sass-loader/dist/cjs.js","mtime":1651821457973},{"path":"/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/node_modules/cache-loader/dist/cjs.js","mtime":1651821459354},{"path":"/Users/wangjianyong/User/company/Corerain/project/cr-open-code/float-collapse-menu/node_modules/vue-loader/lib/index.js","mtime":1651821465097}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mbG9hdC1tZW51LWNvbXAgewogIGRpc3BsYXk6IGlubGluZS1ibG9jazsKICBwYWRkaW5nOiAwIDEwcHg7CiAgaGVpZ2h0OiAzMnB4OwogIGJhY2tncm91bmQ6IHJnYmEoMjE3LCAyMjcsIDI0MiwgMC4xKSB1cmwoJy4vYXNzZXRzL2JnLnBuZycpIDAgMCBuby1yZXBlYXQ7CiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjsKICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNkOWUzZjI7CiAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgI2Q5ZTNmMjsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5jci1wb3BvdmVyLWhpZGUgewogIHotaW5kZXg6IC0xOwp9CgoKLmZsb2F0LW1lbnUtaWNvbiB7CiAgd2lkdGg6IDE2cHg7CiAgaGVpZ2h0OiAxNnB4OwogIGNvbG9yOiAjNjA3NTlGOwp9CgouYXJyb3ctcmlnaHQtZGV0YWlsIHsKICB3aWR0aDogMTZweDsKICBoZWlnaHQ6IDE2cHg7Cn0KCnN2ZywgaW1nIHsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7Cn0KCi5mbG9hdC1tZW51LWFycm93LWljb24gewogIHdpZHRoOiAxMnB4OwogIGhlaWdodDogMTJweDsKICBiYWNrZ3JvdW5kOiB1cmwoJy4vYXNzZXRzL2FyZWEtYXJyb3cucG5nJykgbm8tcmVwZWF0OwogIGJhY2tncm91bmQtc2l6ZTogMTJweDsKfQoKLmZsb2F0LW1lbnUtY29udGVudCB7CiAgd2lkdGg6IDEwMCU7CiAgaGVpZ2h0OiAxMDAlOwogIGNvbG9yOiAjQ0NEREZGOwp9CgouZmxvYXQtbWVudS10ZXh0IHsKICBmbGV4OiAxOwogIG1hcmdpbjogMCA4cHg7CiAgZm9udC13ZWlnaHQ6IEJvbGQ7CiAgZm9udC1zaXplOiAxOHB4OwogIGNvbG9yOiAjQ0NEREZGOwp9CgouY3ItZmxvYXQtbWVudS1wb3BvdmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGN1cnNvcjogcG9pbnRlcjsKCiAgLmNyLXBvcG92ZXItaXRlbSB7CiAgICBvdmVyZmxvdzogYXV0bzsKICAgIHBhZGRpbmc6IDhweDsKICAgIGJhY2tncm91bmQ6ICMxRDIzMzA7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjNDM1MjcwOwogICAgcG9zaXRpb246IGZpeGVkOwogICAgbGVmdDogMDsKCiAgICAmLmNyLXBvcG92ZXItaXRlbS1sYXN0IHsKICAgICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM2Njk5ZmY7CiAgICB9CgogICAgJjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIgewogICAgICBiYWNrZ3JvdW5kOiAjN0Y5MEIzOwogICAgICBib3JkZXItcmFkaXVzOiA1cHg7CiAgICB9CiAgfQoKICBsaSB7CiAgICBoZWlnaHQ6IDQwcHg7CgogICAgJi5ob3ZlciB7CiAgICAgIGJhY2tncm91bmQ6ICMyNjJFNDA7CiAgICB9CiAgfQoKICAuc2VsZWN0LXRpcHMtaWNvbiB7CiAgICB3aWR0aDogMTZweDsKICAgIGhlaWdodDogMTZweDsKICAgIG1hcmdpbi1sZWZ0OiA4cHg7CiAgICBiYWNrZ3JvdW5kOiB1cmwoJy4vYXNzZXRzL2NoZWNrLWRlZi5wbmcnKSAwIDAgbm8tcmVwZWF0OwogICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7CgogICAgJi5hY3RpdmUgewogICAgICBiYWNrZ3JvdW5kOiB1cmwoJy4vYXNzZXRzL2NoZWNrZWQucG5nJykgMCAwIG5vLXJlcGVhdDsKICAgICAgYmFja2dyb3VuZC1zaXplOiAxMDAlIDEwMCU7CiAgICB9CiAgfQoKICAuc2VsZWN0LXRleHQgewogICAgbWFyZ2luOiAwIDhweDsKICAgIGNvbG9yOiAjRDlFM0YyOwogICAgbGV0dGVyLXNwYWNpbmc6IDA7CiAgICBmbGV4OiAxOwogICAgZm9udC1zaXplOiAxNHB4OwogICAgY29sb3I6ICNEOUUzRjI7CiAgfQoKICAuY2hpbGRyZW4tdGlwcy1pY29uIHsKICAgIHdpZHRoOiAxMnB4OwogICAgaGVpZ2h0OiAxMnB4OwogICAgbWFyZ2luLXJpZ2h0OiA4cHg7CgogICAgaSB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBoZWlnaHQ6IDEwMCU7CiAgICAgIGNvbG9yOiAjZmZmOwogICAgfQogIH0KfQo="},{"version":3,"sources":["FloatCollapseMenu.vue"],"names":[],"mappingsjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FloatCollapseMenu.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div\n    class=\"float-menu-comp bsizing\"\n    :style=\"{\n      maxWidth: `${maxWidth}px`\n    }\"\n    @click.stop=\"focus\">\n    <div class=\"float-menu-content flex-c bsizing\">\n      <span class=\"float-menu-icon flex-c\">\n        <img src=\"./assets/map-pos.svg\" alt=\"\" />\n      </span>\n      <span class=\"float-menu-text overflow_oneline\">\n        {{ name }}\n      </span>\n      <span class=\"float-menu-arrow-icon\"></span>\n    </div>\n\n    <div\n      v-show=\"visible\"\n      :class=\"[\n        'cr-popover cr-float-menu-popover',\n        visible ? 'cr-popover-show' : 'cr-popover-hide'\n      ]\">\n      <ul\n        :class=\"[\n          'cr-popover-item',\n          index === popoverList.length - 1 ? 'cr-popover-item-last' : ''\n        ]\"\n        v-for=\"(child, index) in popoverList\"\n        :key=\"index\"\n        :style=\"{\n          width: `${popoverItemWidth}px`,\n          top: `${child.top}px`,\n          left: `${child.left}px`,\n          height: `${child.height}px`\n        }\">\n        <li\n          v-for=\"item in child.data\"\n          :key=\"item[props.value]\"\n          :class=\"[\n            'flex-v-c',\n            value === item[props.value] ? 'active' : '',\n            setNodeHoveBg(hoverFullId, item[props.value] + '') ? 'hover' : ''\n          ]\"\n          @mouseenter=\"mouseenter($event, item, index)\"\n          @mouseleave=\"mouseleave\"\n          @click.stop=\"handleSelect(item)\">\n          <div\n            :class=\"[\n              'select-tips-icon',\n              value === item[props.value] ? 'active' : ''\n            ]\">\n          </div>\n          <div class=\"select-text overflow_oneline\">\n            {{ item[props.label] }}\n          </div>\n          <div\n            v-if=\"item.children && item.children.length\"\n            class=\"children-tips-icon flex-c\">\n            <img class=\"arrow-right-detail\" src=\"./assets/arrow-right.png\" alt=\"\" />\n          </div> \n        </li>\n      </ul>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { addHandle, removeHandle } from '@/util'\n\nexport default {\n  props: {\n    // 原始数据列表\n    list: {\n      type: Array,\n      default: () => []\n    },\n    // listItem 每条数据对应的字段\n    props: {\n      type: Object,\n      default: () => ({\n        label: 'label',\n        value: 'value',\n        children: 'children'\n      })\n    },\n    // 双向绑定数据值\n    value: [String, Number],\n    // 选中显示框最大长度\n    maxWidth: {\n      type: Number,\n      default: 304\n    },\n    // 选中显示框最小长度\n    minWidth: {\n      type: Number,\n      default: 180\n    },\n    // 悬浮菜单item宽度\n    popoverItemWidth: {\n      type: Number,\n      default: 224\n    },\n    // 边框宽度\n    borderWidth: {\n      type: Number,\n      default: 1.5\n    },\n    // 页面滚动元素\n    scrollEl: {\n      type: String,\n      default: 'body'\n    }\n  },\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  data() {\n    return {\n      popoverList: [],  // 悬浮菜单集合\n      visible: false,\n      name: '',\n      fullId: '',\n      symbol: ' / ',\n      viewWidth: 0,\n      viewHeight: 0,\n      margin: 8,\n      lineHeight: 40,\n      posStr: '',\n      hoverFullId: '',\n      percent: 0.8, // 悬浮菜单可以滚动的最大百分比高度\n      hasInitWidth: false,\n      popoverEl: null,\n      placement: 'bottom-right'\n    }\n  },\n  created() {\n    this.combineData(this.list) \n    this.posStr = this.placement\n  },\n  mounted() {\n    const documentElement = document.documentElement\n    this.viewWidth = documentElement.clientWidth\n    this.viewHeight = documentElement.clientHeight\n\n    const popoverEl = this.$el.querySelector('.cr-popover')\n    const body = document.querySelector('body')\n    this.popoverEl = popoverEl\n\n    if (body.append) {\n      body.append(popoverEl);\n    } else {\n      body.appendChild(popoverEl);\n    }\n\n    addHandle(document, 'click', this.blur)\n    addHandle(window, 'resize', this.blur)\n\n    // 监听滚动 关闭悬浮菜单\n    const el = document.querySelector(this.scrollEl)\n    addHandle(el, 'scroll', this.scrollSetPos)\n  },\n  methods: {\n    // 初始化组合数据  设置每级的父元素名称、id\n    combineData(list, parent) {\n      const props = this.props\n      const symbol = this.symbol\n\n      list.forEach(item => {\n        const name = item[props.label]\n        const id = item[props.value]\n        const children = item[props.children]\n\n        if (parent) {\n          item.fullId = parent.fullId + symbol + id\n          item.fullName = parent.fullName + symbol + name\n        } else {\n          item.fullId = id + ''\n          item.fullName = name\n        }\n\n        if (children && children.length) {\n          this.combineData(children, item)\n        }\n\n        if (this.value === id) {\n          this.setShowNameSlice(item.fullName)\n          this.fullId = item.fullId.includes(symbol) ? item.fullId.split(symbol) : [item.fullId]\n        }\n      })\n    },\n    // 更新下拉框列表数据\n    updatePopoverList(data) {\n      const item = {\n        top: 0,\n        left: 0,\n        height: 0,\n        data\n      }\n\n      this.popoverList.push(item)\n    },\n    mouseenter(e, node, parentIndex) {\n      this.hoverFullId = node.fullId\n      const target = e.target\n      this.popoverList = this.popoverList.slice(0, parentIndex + 1)\n\n      const children = node.children\n      if (!children || !children.length) {\n        return\n      }\n\n      this.updatePopoverList(children)\n      const cur = this.popoverList[this.popoverList.length - 1]\n      const parent = this.popoverList[this.popoverList.length - 2]\n      this.setNodePos(target, cur, parent)\n    },\n    setNodeHoveBg(hoverFullId, nodeId) {\n      const symbol = this.symbol\n\n      if (hoverFullId.includes(symbol)) {\n        const arr = hoverFullId.split(symbol)\n\n        return arr.includes(nodeId + '')\n      }\n\n      return [hoverFullId].includes(nodeId + '')\n    },\n    mouseleave() {\n      // this.popoverList = []\n    },\n    focus() {\n      console.log('float menu focus')\n      this.visible = !this.visible\n      this.popoverList = []\n      \n      if (this.list.length) {\n        this.updatePopoverList(this.list)\n        const firstNode = this.popoverList[0]\n        this.setRootPos(firstNode)\n      }\n    },\n    blur() {\n      this.visible = false\n      this.popoverList = []\n      this.posStr = this.placement\n      this.hoverFullId = ''\n    },\n    // 设置根节点元素位置\n    setRootPos(node) {\n      const popoverItemWidth = this.popoverItemWidth\n      const viewWidth = this.viewWidth\n      const viewHeight = this.viewHeight\n      let top = 0\n      let left = 0\n      let height = 0\n      const el = this.$el\n      const box = el.getBoundingClientRect()\n      const boxLeft = box.left\n      const boxRight = box.right\n      const boxBottom = box.bottom\n      const boxTop = box.top\n      const margin = this.margin\n      const percent = this.percent\n      const borderPadding = (this.borderWidth + margin) * 2\n\n      // 设置元素相关位置\n      const setNodeSizePos = (node, top, left, height) => {\n        node.top = top\n        node.left = left\n        node.height = height\n      }\n\n      // 左侧展示 计算右侧剩余空间\n      let space = viewWidth - box.left\n\n      // 右侧空间充足\n      if (space >= popoverItemWidth) {\n        left = boxLeft\n      }\n      // 右侧空间不足 右侧对齐\n      else {\n        left = boxRight - popoverItemWidth\n      }\n\n      // 底部展示 计算底部空间是否充足\n      space = viewHeight - boxBottom\n      const nodeHeight = node.data.length * this.lineHeight\n      const contentHeight = nodeHeight + borderPadding\n\n      // 底部显示（底部空间充足）\n      if (space >= contentHeight + margin) {\n        top = boxBottom + margin\n        height = contentHeight\n        setNodeSizePos(node, top, left, height)\n        \n        return\n      }\n\n      // 底部显示（底部空间不足） 底部空间 >= 上面空间\n      if (space < contentHeight + margin && space >= boxTop) {\n        top = boxBottom + margin\n        height = (space - margin) * percent\n        setNodeSizePos(node, top, left, height)\n        \n        return\n      }\n\n      // 上面显示（上面空间充足）\n      space = boxTop - margin\n      if (space >= contentHeight) {\n        top = space - contentHeight\n        height = contentHeight\n        setNodeSizePos(node, top, left, height)\n        \n        return\n      }\n\n      // 上面显示（上面空间空间不足）上面空间 >= 下面空间\n      if (space < contentHeight && boxTop >= viewHeight - boxBottom) {\n        top = space * (1 - percent)\n        height = space * percent\n        setNodeSizePos(node, top, left, height)\n      }\n    },\n    // 设置节点位置\n    setNodePos(el, node, parent) {\n      const popoverItemWidth = this.popoverItemWidth\n      const viewWidth = this.viewWidth\n      const viewHeight = this.viewHeight\n      let top = 0\n      let left = 0\n      let height = 0\n      const box = el.getBoundingClientRect()\n      const boxLeft = box.left\n      const boxRight = box.right\n      const boxBottom = box.bottom\n      const boxTop = box.top\n      const margin = this.margin\n      const symbol = '-'\n      const percent = this.percent\n      const borderPadding = (this.borderWidth + margin) * 2\n      const nodeHeight = node.data.length * this.lineHeight\n      const contentHeight = nodeHeight + borderPadding\n\n      // 左侧显示\n      const leftShow = () => {\n        const space = boxLeft\n        const arr = this.posStr.split(symbol)\n        let pos = 'left'\n\n        if (space >= popoverItemWidth) {\n          left = boxLeft - popoverItemWidth\n        } else {\n          left = boxRight\n          pos = 'right'\n        }\n\n         this.posStr = `${arr[0]}${symbol}${pos}`\n      }\n\n      // 右侧显示\n      const rightShow = () => {\n        const space = viewWidth - boxRight\n        const arr = this.posStr.split(symbol)\n        let pos = 'right'\n\n        // 右侧空间充足 右侧显示\n        if (space >= popoverItemWidth) {\n          left = boxRight\n        }\n        // 右侧空间不足 左侧显示\n        else {\n          left = boxLeft - popoverItemWidth\n          pos = 'left'\n        }\n\n        this.posStr = `${arr[0]}${symbol}${pos}`\n      }\n\n      // 底部显示\n      const bottomShow = () => {\n        // 底部展示 计算底部空间\n        const space = viewHeight - boxTop\n        const arr = this.posStr.split(symbol)\n        let pos = 'bottom'\n\n        // 底部空间充足 底部展示\n        if (space >= contentHeight) {\n          top = boxTop\n          height = contentHeight\n          this.posStr = `${pos}${symbol}${arr[1]}`\n\n          return\n        }\n\n        // 底部空间不足  底部空间大于上部空间 底部展示并且滚动\n        if (space < contentHeight && space >= boxBottom) {\n          top = boxTop\n          height = space * percent\n          this.posStr = `${pos}${symbol}${arr[1]}`\n          \n          return\n        }\n\n        // 上面空间充足 上面显示\n        if (boxBottom >= contentHeight) {\n          top = boxBottom - contentHeight\n          pos = 'top'\n          height = contentHeight\n          this.posStr = `${pos}${symbol}${arr[1]}`\n          \n          return\n        }\n\n        // 上面空间不足 上面空间大于下面空间 上面显示\n        if (boxBottom < contentHeight && boxBottom > space) {\n          top = boxBottom * (1 - percent)\n          pos = 'top'\n          height = boxBottom * percent\n          this.posStr = `${pos}${symbol}${arr[1]}`\n        }\n      }\n\n      // 上面显示\n      const topShow = () => {\n        // 底部展示 计算底部空间\n        const space = viewHeight - boxTop\n        const arr = this.posStr.split(symbol)\n        let pos = 'bottom'\n\n        // 上面空间充足 上面显示\n        if (boxBottom >= contentHeight) {\n          top = boxBottom - contentHeight\n          pos = 'top'\n          height = contentHeight\n          this.posStr = `${pos}${symbol}${arr[1]}`\n\n          return\n        }\n\n        // 上面空间不足 上面空间大于下面空间 上面显示\n        if (boxBottom < contentHeight && boxBottom > space) {\n          top = boxBottom * (1 - percent)\n          pos = 'top'\n          height = boxBottom * percent\n          this.posStr = `${pos}${symbol}${arr[1]}`\n\n          return\n        }\n\n        // 底部空间充足 底部展示\n        if (space >= contentHeight) {\n          top = boxTop\n          height = contentHeight\n          this.posStr = `${pos}${symbol}${arr[1]}`\n\n          return\n        }\n\n        // 底部空间不足  底部空间大于上部空间 底部展示并且滚动\n        if (space < contentHeight && space >= boxBottom) {\n          top = boxTop\n          height = space * percent\n          this.posStr = `${pos}${symbol}${arr[1]}`\n\n          return\n        }\n      }\n\n      const setPos = (type) => {\n        switch(type) {\n          case 'left':\n            leftShow()\n            break\n\n          case 'right':\n            rightShow()\n            break\n\n          case 'bottom':\n            bottomShow()\n            break\n\n          case 'top':\n            topShow()\n            break\n\n          default:\n            break\n        }\n      }\n\n      this.posStr = parent.childPos || this.placement\n      const arr = this.posStr.split(symbol)\n\n      for (const key of arr) {\n        setPos(key)\n      }\n\n      parent.childPos = this.posStr\n      node.childPos = this.posStr\n\n      node.top = top\n      node.left = left\n      node.height = height\n    },\n    // 选择节点\n    handleSelect(node) {\n      this.setShowNameSlice(node.fullName)\n      this.fullId = node.fullId\n      const id = node[this.props.value]\n\n      if (!this.hasInitWidth) {\n        this.hasInitWidth = true\n        this.$el.style.width = 'auto'\n      }\n      \n      // 双向绑定-选择节点\n      // @arg 参数为当前节点 id\n      this.$emit('change', id)\n      // 选中节点\n      // @arg 参数为当前节点 node\n      this.$emit('select', node)\n      this.blur()\n    },\n    // name 截取\n    setShowNameSlice(name) {\n      const fontSize = 18\n      const total = name.length\n      const fontWidth = name.length * fontSize\n      const space = this.maxWidth - 28 - 20 - 16 - 2 - 3 * 18\n\n\n      if (fontWidth > space) {\n        const num = Math.ceil(space / fontSize)\n        this.name = `...${name.slice(total - num - 1)}`\n      } else {\n        this.name = name\n      }\n    },\n    // 页面滚动设置位置\n    scrollSetPos() {\n      if (!this.visible) {\n        return\n      }\n      \n      this.blur()\n    },\n    // 销毁\n    dispose() {\n      this.blur()\n      const popoverEl = this.popoverEl\n      popoverEl.parentNode.removeChild(popoverEl)\n      this.popoverEl = null\n      \n      removeHandle(document, 'click', this.blur)\n      removeHandle(window, 'resize', this.blur)\n      // 监听滚动 关闭悬浮菜单\n      const el = document.querySelector(this.scrollEl)\n      removeHandle(el, 'scroll', this.scrollSetPos)\n    }\n  },\n  beforeDestroy() {\n    this.dispose()\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.float-menu-comp {\n  display: inline-block;\n  padding: 0 10px;\n  height: 32px;\n  background: rgba(217, 227, 242, 0.1) url('./assets/bg.png') 0 0 no-repeat;\n  background-size: cover;\n  border-left: 1px solid #d9e3f2;\n  border-right: 1px solid #d9e3f2;\n  cursor: pointer;\n}\n\n.cr-popover-hide {\n  z-index: -1;\n}\n\n\n.float-menu-icon {\n  width: 16px;\n  height: 16px;\n  color: #60759F;\n}\n\n.arrow-right-detail {\n  width: 16px;\n  height: 16px;\n}\n\nsvg, img {\n  width: 100%;\n  height: 100%;\n}\n\n.float-menu-arrow-icon {\n  width: 12px;\n  height: 12px;\n  background: url('./assets/area-arrow.png') no-repeat;\n  background-size: 12px;\n}\n\n.float-menu-content {\n  width: 100%;\n  height: 100%;\n  color: #CCDDFF;\n}\n\n.float-menu-text {\n  flex: 1;\n  margin: 0 8px;\n  font-weight: Bold;\n  font-size: 18px;\n  color: #CCDDFF;\n}\n\n.cr-float-menu-popover {\n  display: flex;\n  cursor: pointer;\n\n  .cr-popover-item {\n    overflow: auto;\n    padding: 8px;\n    background: #1D2330;\n    border: 1px solid #435270;\n    position: fixed;\n    left: 0;\n\n    &.cr-popover-item-last {\n      border-bottom: 2px solid #6699ff;\n    }\n\n    &::-webkit-scrollbar-thumb {\n      background: #7F90B3;\n      border-radius: 5px;\n    }\n  }\n\n  li {\n    height: 40px;\n\n    &.hover {\n      background: #262E40;\n    }\n  }\n\n  .select-tips-icon {\n    width: 16px;\n    height: 16px;\n    margin-left: 8px;\n    background: url('./assets/check-def.png') 0 0 no-repeat;\n    background-size: 100% 100%;\n\n    &.active {\n      background: url('./assets/checked.png') 0 0 no-repeat;\n      background-size: 100% 100%;\n    }\n  }\n\n  .select-text {\n    margin: 0 8px;\n    color: #D9E3F2;\n    letter-spacing: 0;\n    flex: 1;\n    font-size: 14px;\n    color: #D9E3F2;\n  }\n\n  .children-tips-icon {\n    width: 12px;\n    height: 12px;\n    margin-right: 8px;\n\n    i {\n      width: 100%;\n      height: 100%;\n      color: #fff;\n    }\n  }\n}\n</style>"]}]}